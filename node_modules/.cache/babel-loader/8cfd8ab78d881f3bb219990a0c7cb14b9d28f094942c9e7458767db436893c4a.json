{"ast":null,"code":"var _jsxFileName = \"/workspaces/Apiproject/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [transcription, setTranscription] = useState('');\n  const [translation, setTranslation] = useState('');\n  const [audioUrl, setAudioUrl] = useState('');\n  const [uploadedAudioFile, setUploadedAudioFile] = useState(null); // State to hold uploaded file\n  const [audioFileUrl, setAudioFileUrl] = useState(''); // State to hold URL input\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n  useEffect(() => {\n    // Create a WebSocket connection when the component mounts\n    const socket = new WebSocket('ws://localhost:5001');\n    socket.onopen = () => {\n      console.log('WebSocket connection established');\n    };\n    socket.onmessage = event => {\n      console.log('Message from server:', event.data);\n      // Handle incoming messages from the WebSocket server if needed\n    };\n    socket.onclose = () => {\n      console.log('WebSocket connection closed');\n    };\n\n    // Cleanup function to close the WebSocket when the component unmounts\n    return () => {\n      socket.close();\n    };\n  }, []); // Empty dependency array means this runs once when the component mounts\n\n  const startRecording = () => {\n    navigator.mediaDevices.getUserMedia({\n      audio: true\n    }).then(stream => {\n      mediaRecorderRef.current = new MediaRecorder(stream);\n      mediaRecorderRef.current.ondataavailable = event => {\n        audioChunksRef.current.push(event.data);\n      };\n      mediaRecorderRef.current.onstop = () => {\n        const audioBlob = new Blob(audioChunksRef.current, {\n          type: 'audio/wav'\n        });\n        const audioUrl = URL.createObjectURL(audioBlob);\n        setAudioUrl(audioUrl);\n        sendAudioToBackend(audioBlob);\n        audioChunksRef.current = [];\n      };\n      mediaRecorderRef.current.start();\n    }).catch(error => {\n      console.error(\"Error accessing the microphone: \", error);\n    });\n  };\n  const stopRecording = () => {\n    if (mediaRecorderRef.current) {\n      mediaRecorderRef.current.stop();\n    }\n  };\n  const sendAudioToBackend = async audioBlob => {\n    const formData = new FormData();\n    formData.append('audio', audioBlob, 'recording.wav');\n    try {\n      const response = await axios.post('http://localhost:5000/upload-audio', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setTranscription(response.data.transcription);\n      setTranslation(response.data.translation);\n      setAudioUrl(`http://localhost:5000/${response.data.audioFile}`);\n    } catch (error) {\n      console.error('Error uploading the audio:', error);\n    }\n  };\n  const handleFileChange = event => {\n    setUploadedAudioFile(event.target.files[0]); // Update state with selected file\n  };\n  const handleUrlChange = event => {\n    setAudioFileUrl(event.target.value); // Update state with URL input\n  };\n  const uploadFile = async event => {\n    event.preventDefault(); // Prevent default form submission\n    if (!uploadedAudioFile) {\n      console.error(\"No audio file selected\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append('audio', uploadedAudioFile, uploadedAudioFile.name);\n    try {\n      const response = await axios.post('http://localhost:5000/upload-audio', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setTranscription(response.data.transcription);\n      setTranslation(response.data.translation);\n      setAudioUrl(`http://localhost:5000/${response.data.audioFile}`);\n    } catch (error) {\n      console.error('Error uploading the audio file:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Audio to Text Converter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startRecording,\n        children: \"Start Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopRecording,\n        children: \"Stop Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), audioUrl && /*#__PURE__*/_jsxDEV(\"audio\", {\n      controls: true,\n      src: audioUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 20\n    }, this), transcription && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Transcription:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 28\n      }, this), \" \", transcription]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 25\n    }, this), translation && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Translation:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 26\n      }, this), \" \", translation]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Audio File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: uploadFile,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"audio/*\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Audio URL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: audioFileUrl,\n      onChange: handleUrlChange,\n      placeholder: \"Enter audio URL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: uploadFile,\n      children: \"Upload URL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"V+GJnGtXu7Tt7vvjZJqH9wM3AzE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","jsxDEV","_jsxDEV","App","_s","transcription","setTranscription","translation","setTranslation","audioUrl","setAudioUrl","uploadedAudioFile","setUploadedAudioFile","audioFileUrl","setAudioFileUrl","mediaRecorderRef","audioChunksRef","socket","WebSocket","onopen","console","log","onmessage","event","data","onclose","close","startRecording","navigator","mediaDevices","getUserMedia","audio","then","stream","current","MediaRecorder","ondataavailable","push","onstop","audioBlob","Blob","type","URL","createObjectURL","sendAudioToBackend","start","catch","error","stopRecording","stop","formData","FormData","append","response","post","headers","audioFile","handleFileChange","target","files","handleUrlChange","value","uploadFile","preventDefault","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","controls","src","onSubmit","accept","onChange","placeholder","_c","$RefreshReg$"],"sources":["/workspaces/Apiproject/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [transcription, setTranscription] = useState('');\n  const [translation, setTranslation] = useState('');\n  const [audioUrl, setAudioUrl] = useState('');\n  const [uploadedAudioFile, setUploadedAudioFile] = useState(null); // State to hold uploaded file\n  const [audioFileUrl, setAudioFileUrl] = useState(''); // State to hold URL input\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n\n  useEffect(() => {\n    // Create a WebSocket connection when the component mounts\n    const socket = new WebSocket('ws://localhost:5001');\n\n    socket.onopen = () => {\n      console.log('WebSocket connection established');\n    };\n\n    socket.onmessage = (event) => {\n      console.log('Message from server:', event.data);\n      // Handle incoming messages from the WebSocket server if needed\n    };\n\n    socket.onclose = () => {\n      console.log('WebSocket connection closed');\n    };\n\n    // Cleanup function to close the WebSocket when the component unmounts\n    return () => {\n      socket.close();\n    };\n  }, []); // Empty dependency array means this runs once when the component mounts\n\n  const startRecording = () => {\n    navigator.mediaDevices.getUserMedia({ audio: true })\n      .then(stream => {\n        mediaRecorderRef.current = new MediaRecorder(stream);\n        mediaRecorderRef.current.ondataavailable = event => {\n          audioChunksRef.current.push(event.data);\n        };\n        mediaRecorderRef.current.onstop = () => {\n          const audioBlob = new Blob(audioChunksRef.current, { type: 'audio/wav' });\n          const audioUrl = URL.createObjectURL(audioBlob);\n          setAudioUrl(audioUrl);\n          sendAudioToBackend(audioBlob);\n          audioChunksRef.current = [];\n        };\n        mediaRecorderRef.current.start();\n      })\n      .catch(error => {\n        console.error(\"Error accessing the microphone: \", error);\n      });\n  };\n\n  const stopRecording = () => {\n    if (mediaRecorderRef.current) {\n      mediaRecorderRef.current.stop();\n    }\n  };\n\n  const sendAudioToBackend = async (audioBlob) => {\n    const formData = new FormData();\n    formData.append('audio', audioBlob, 'recording.wav');\n\n    try {\n      const response = await axios.post('http://localhost:5000/upload-audio', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n\n      setTranscription(response.data.transcription);\n      setTranslation(response.data.translation);\n      setAudioUrl(`http://localhost:5000/${response.data.audioFile}`);\n    } catch (error) {\n      console.error('Error uploading the audio:', error);\n    }\n  };\n\n  const handleFileChange = (event) => {\n    setUploadedAudioFile(event.target.files[0]); // Update state with selected file\n  };\n\n  const handleUrlChange = (event) => {\n    setAudioFileUrl(event.target.value); // Update state with URL input\n  };\n\n  const uploadFile = async (event) => {\n    event.preventDefault(); // Prevent default form submission\n    if (!uploadedAudioFile) {\n      console.error(\"No audio file selected\");\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('audio', uploadedAudioFile, uploadedAudioFile.name);\n\n    try {\n      const response = await axios.post('http://localhost:5000/upload-audio', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n\n      setTranscription(response.data.transcription);\n      setTranslation(response.data.translation);\n      setAudioUrl(`http://localhost:5000/${response.data.audioFile}`);\n    } catch (error) {\n      console.error('Error uploading the audio file:', error);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Audio to Text Converter</h1>\n      <div>\n        <button onClick={startRecording}>Start Recording</button>\n        <button onClick={stopRecording}>Stop Recording</button>\n      </div>\n      {audioUrl && <audio controls src={audioUrl}></audio>}\n      {transcription && <p><strong>Transcription:</strong> {transcription}</p>}\n      {translation && <p><strong>Translation:</strong> {translation}</p>}\n\n      <h2>Upload Audio File</h2>\n      <form onSubmit={uploadFile}>\n        <input \n          type=\"file\" \n          accept=\"audio/*\" \n          onChange={handleFileChange} \n        />\n        <button type=\"submit\">Upload</button>\n      </form>\n\n      <h2>Upload Audio URL</h2>\n      <input \n        type=\"text\" \n        value={audioFileUrl} \n        onChange={handleUrlChange} \n        placeholder=\"Enter audio URL\" \n      />\n      <button onClick={uploadFile}>Upload URL</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}