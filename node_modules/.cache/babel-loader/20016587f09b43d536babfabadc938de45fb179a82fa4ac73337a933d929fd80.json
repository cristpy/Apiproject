{"ast":null,"code":"var _jsxFileName = \"/workspaces/Apiproject/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [transcription, setTranscription] = useState('');\n  const [translation, setTranslation] = useState('');\n  const [audioUrl, setAudioUrl] = useState('');\n  const [uploadedAudioFile, setUploadedAudioFile] = useState(null); // State to hold uploaded file\n  const [audioFileUrl, setAudioFileUrl] = useState(''); // State to hold URL input\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n  const socketRef = useRef(null);\n\n  // WebSocket connection logic\n  useEffect(() => {\n    socketRef.current = new WebSocket('ws://localhost:5001');\n    socketRef.current.onopen = () => {\n      console.log('WebSocket connection established');\n      socketRef.current.send('Hello Server!');\n    };\n    socketRef.current.onmessage = event => {\n      console.log('Message from server:', event.data);\n    };\n    socketRef.current.onerror = error => {\n      console.error('WebSocket error:', error);\n    };\n    socketRef.current.onclose = event => {\n      console.log('WebSocket connection closed:', event);\n    };\n\n    // Cleanup on unmount\n    return () => {\n      socketRef.current.close();\n    };\n  }, []);\n\n  // Function to start recording audio\n  const startRecording = () => {\n    navigator.mediaDevices.getUserMedia({\n      audio: true\n    }).then(stream => {\n      mediaRecorderRef.current = new MediaRecorder(stream);\n      mediaRecorderRef.current.ondataavailable = event => {\n        audioChunksRef.current.push(event.data);\n      };\n      mediaRecorderRef.current.onstop = () => {\n        const audioBlob = new Blob(audioChunksRef.current, {\n          type: 'audio/wav'\n        });\n        const audioUrl = URL.createObjectURL(audioBlob);\n        setAudioUrl(audioUrl);\n        sendAudioToBackend(audioBlob);\n        audioChunksRef.current = [];\n      };\n      mediaRecorderRef.current.start();\n    }).catch(error => {\n      console.error(\"Error accessing the microphone: \", error);\n    });\n  };\n\n  // Function to stop recording audio\n  const stopRecording = () => {\n    if (mediaRecorderRef.current) {\n      mediaRecorderRef.current.stop();\n    }\n  };\n\n  // Function to send recorded audio to the backend\n  const sendAudioToBackend = async audioBlob => {\n    const formData = new FormData();\n    formData.append('audio', audioBlob, 'recording.wav');\n    try {\n      console.log('Sending audio to backend...');\n      const response = await axios.post('http://localhost:5000/upload-audio', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setTranscription(response.data.transcription);\n      setTranslation(response.data.translation);\n      setAudioUrl(`http://localhost:5000/${response.data.audioFile}`);\n\n      // Optionally send a message to the WebSocket server after audio upload\n      if (socketRef.current && socketRef.current.readyState === WebSocket.OPEN) {\n        socketRef.current.send('Audio uploaded successfully');\n      }\n    } catch (error) {\n      console.error('Error uploading the audio:', error);\n      alert('Failed to upload audio. Please check the server.');\n    }\n  };\n\n  // Handle file input change\n  const handleFileChange = event => {\n    setUploadedAudioFile(event.target.files[0]); // Update state with selected file\n  };\n\n  // Handle URL input change\n  const handleUrlChange = event => {\n    setAudioFileUrl(event.target.value); // Update state with URL input\n  };\n\n  // Function to upload a file to the backend\n  const uploadFile = async event => {\n    event.preventDefault(); // Prevent default form submission\n    if (!uploadedAudioFile) {\n      console.error(\"No audio file selected\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append('audio', uploadedAudioFile, uploadedAudioFile.name);\n    try {\n      console.log('Uploading audio file...');\n      const response = await axios.post('http://localhost:5000/upload-audio', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setTranscription(response.data.transcription);\n      setTranslation(response.data.translation);\n      setAudioUrl(`http://localhost:5000/${response.data.audioFile}`);\n\n      // Optionally send a message to the WebSocket server after upload\n      if (socketRef.current && socketRef.current.readyState === WebSocket.OPEN) {\n        socketRef.current.send('File uploaded successfully');\n      }\n    } catch (error) {\n      console.error('Error uploading the audio file:', error);\n      alert('Failed to upload audio file. Please check the server.');\n    }\n  };\n\n  // Function to upload an audio URL to the backend\n  const uploadUrl = async () => {\n    if (!audioFileUrl) {\n      alert(\"Please enter a valid audio URL\");\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:5000/upload-url', {\n        url: audioFileUrl\n      });\n      setTranscription(response.data.transcription);\n      setTranslation(response.data.translation);\n      setAudioUrl(audioFileUrl);\n      if (socketRef.current && socketRef.current.readyState === WebSocket.OPEN) {\n        socketRef.current.send('URL uploaded successfully');\n      }\n    } catch (error) {\n      console.error('Error uploading the audio URL:', error);\n      alert('Failed to upload audio URL. Please check the server.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Audio to Text Converter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startRecording,\n        children: \"Start Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopRecording,\n        children: \"Stop Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this), audioUrl && /*#__PURE__*/_jsxDEV(\"audio\", {\n      controls: true,\n      src: audioUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 26\n    }, this), transcription && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Transcription:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 34\n      }, this), \" \", transcription]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 31\n    }, this), translation && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Translation:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 32\n      }, this), \" \", translation]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Audio File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: uploadFile,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"audio/*\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Audio URL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: audioFileUrl,\n      onChange: handleUrlChange,\n      placeholder: \"Enter audio URL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: uploadUrl,\n      children: \"Upload URL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"OZGw2nJT5K7hby0/PAckw3gtyvo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","jsxDEV","_jsxDEV","App","_s","transcription","setTranscription","translation","setTranslation","audioUrl","setAudioUrl","uploadedAudioFile","setUploadedAudioFile","audioFileUrl","setAudioFileUrl","mediaRecorderRef","audioChunksRef","socketRef","current","WebSocket","onopen","console","log","send","onmessage","event","data","onerror","error","onclose","close","startRecording","navigator","mediaDevices","getUserMedia","audio","then","stream","MediaRecorder","ondataavailable","push","onstop","audioBlob","Blob","type","URL","createObjectURL","sendAudioToBackend","start","catch","stopRecording","stop","formData","FormData","append","response","post","headers","audioFile","readyState","OPEN","alert","handleFileChange","target","files","handleUrlChange","value","uploadFile","preventDefault","name","uploadUrl","url","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","controls","src","onSubmit","accept","onChange","placeholder","_c","$RefreshReg$"],"sources":["/workspaces/Apiproject/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n    const [transcription, setTranscription] = useState('');\n    const [translation, setTranslation] = useState('');\n    const [audioUrl, setAudioUrl] = useState('');\n    const [uploadedAudioFile, setUploadedAudioFile] = useState(null); // State to hold uploaded file\n    const [audioFileUrl, setAudioFileUrl] = useState(''); // State to hold URL input\n    const mediaRecorderRef = useRef(null);\n    const audioChunksRef = useRef([]);\n    const socketRef = useRef(null);\n\n    // WebSocket connection logic\n    useEffect(() => {\n        socketRef.current = new WebSocket('ws://localhost:5001');\n\n        socketRef.current.onopen = () => {\n            console.log('WebSocket connection established');\n            socketRef.current.send('Hello Server!');\n        };\n\n        socketRef.current.onmessage = (event) => {\n            console.log('Message from server:', event.data);\n        };\n\n        socketRef.current.onerror = (error) => {\n            console.error('WebSocket error:', error);\n        };\n\n        socketRef.current.onclose = (event) => {\n            console.log('WebSocket connection closed:', event);\n        };\n\n        // Cleanup on unmount\n        return () => {\n            socketRef.current.close();\n        };\n    }, []);\n\n    // Function to start recording audio\n    const startRecording = () => {\n        navigator.mediaDevices.getUserMedia({ audio: true })\n            .then(stream => {\n                mediaRecorderRef.current = new MediaRecorder(stream);\n                mediaRecorderRef.current.ondataavailable = event => {\n                    audioChunksRef.current.push(event.data);\n                };\n                mediaRecorderRef.current.onstop = () => {\n                    const audioBlob = new Blob(audioChunksRef.current, { type: 'audio/wav' });\n                    const audioUrl = URL.createObjectURL(audioBlob);\n                    setAudioUrl(audioUrl);\n                    sendAudioToBackend(audioBlob);\n                    audioChunksRef.current = [];\n                };\n                mediaRecorderRef.current.start();\n            })\n            .catch(error => {\n                console.error(\"Error accessing the microphone: \", error);\n            });\n    };\n\n    // Function to stop recording audio\n    const stopRecording = () => {\n        if (mediaRecorderRef.current) {\n            mediaRecorderRef.current.stop();\n        }\n    };\n\n    // Function to send recorded audio to the backend\n    const sendAudioToBackend = async (audioBlob) => {\n        const formData = new FormData();\n        formData.append('audio', audioBlob, 'recording.wav');\n\n        try {\n            console.log('Sending audio to backend...');\n            const response = await axios.post('http://localhost:5000/upload-audio', formData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                },\n            });\n\n            setTranscription(response.data.transcription);\n            setTranslation(response.data.translation);\n            setAudioUrl(`http://localhost:5000/${response.data.audioFile}`);\n\n            // Optionally send a message to the WebSocket server after audio upload\n            if (socketRef.current && socketRef.current.readyState === WebSocket.OPEN) {\n                socketRef.current.send('Audio uploaded successfully');\n            }\n        } catch (error) {\n            console.error('Error uploading the audio:', error);\n            alert('Failed to upload audio. Please check the server.');\n        }\n    };\n\n    // Handle file input change\n    const handleFileChange = (event) => {\n        setUploadedAudioFile(event.target.files[0]); // Update state with selected file\n    };\n\n    // Handle URL input change\n    const handleUrlChange = (event) => {\n        setAudioFileUrl(event.target.value); // Update state with URL input\n    };\n\n    // Function to upload a file to the backend\n    const uploadFile = async (event) => {\n        event.preventDefault(); // Prevent default form submission\n        if (!uploadedAudioFile) {\n            console.error(\"No audio file selected\");\n            return;\n        }\n\n        const formData = new FormData();\n        formData.append('audio', uploadedAudioFile, uploadedAudioFile.name);\n\n        try {\n            console.log('Uploading audio file...');\n            const response = await axios.post('http://localhost:5000/upload-audio', formData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                },\n            });\n\n            setTranscription(response.data.transcription);\n            setTranslation(response.data.translation);\n            setAudioUrl(`http://localhost:5000/${response.data.audioFile}`);\n\n            // Optionally send a message to the WebSocket server after upload\n            if (socketRef.current && socketRef.current.readyState === WebSocket.OPEN) {\n                socketRef.current.send('File uploaded successfully');\n            }\n        } catch (error) {\n            console.error('Error uploading the audio file:', error);\n            alert('Failed to upload audio file. Please check the server.');\n        }\n    };\n\n    // Function to upload an audio URL to the backend\n    const uploadUrl = async () => {\n        if (!audioFileUrl) {\n            alert(\"Please enter a valid audio URL\");\n            return;\n        }\n\n        try {\n            const response = await axios.post('http://localhost:5000/upload-url', { url: audioFileUrl });\n\n            setTranscription(response.data.transcription);\n            setTranslation(response.data.translation);\n            setAudioUrl(audioFileUrl);\n\n            if (socketRef.current && socketRef.current.readyState === WebSocket.OPEN) {\n                socketRef.current.send('URL uploaded successfully');\n            }\n        } catch (error) {\n            console.error('Error uploading the audio URL:', error);\n            alert('Failed to upload audio URL. Please check the server.');\n        }\n    };\n\n    return (\n        <div className=\"App\">\n            <h1>Audio to Text Converter</h1>\n            <div>\n                <button onClick={startRecording}>Start Recording</button>\n                <button onClick={stopRecording}>Stop Recording</button>\n            </div>\n            {audioUrl && <audio controls src={audioUrl}></audio>}\n            {transcription && <p><strong>Transcription:</strong> {transcription}</p>}\n            {translation && <p><strong>Translation:</strong> {translation}</p>}\n\n            <h2>Upload Audio File</h2>\n            <form onSubmit={uploadFile}>\n                <input \n                    type=\"file\" \n                    accept=\"audio/*\" \n                    onChange={handleFileChange} \n                />\n                <button type=\"submit\">Upload</button>\n            </form>\n\n            <h2>Upload Audio URL</h2>\n            <input \n                type=\"text\" \n                value={audioFileUrl} \n                onChange={handleUrlChange} \n                placeholder=\"Enter audio URL\" \n            />\n            <button onClick={uploadUrl}>Upload URL</button>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}