{"ast":null,"code":"var _jsxFileName = \"/workspaces/Apiproject/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst rootElement = document.getElementById('root'); // This should get the div\nif (!rootElement) {\n  console.error('Root element not found');\n} else {\n  const root = ReactDOM.createRoot(rootElement); // Pass the root element\n  root.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this));\n}","map":{"version":3,"names":["React","ReactDOM","App","jsxDEV","_jsxDEV","rootElement","document","getElementById","console","error","root","createRoot","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/workspaces/Apiproject/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst rootElement = document.getElementById('root'); // This should get the div\nif (!rootElement) {\n  console.error('Root element not found');\n} else {\n  const root = ReactDOM.createRoot(rootElement); // Pass the root element\n  root.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,GAAG,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,WAAW,GAAGC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC;AACrD,IAAI,CAACF,WAAW,EAAE;EAChBG,OAAO,CAACC,KAAK,CAAC,wBAAwB,CAAC;AACzC,CAAC,MAAM;EACL,MAAMC,IAAI,GAAGT,QAAQ,CAACU,UAAU,CAACN,WAAW,CAAC,CAAC,CAAC;EAC/CK,IAAI,CAACE,MAAM,cACTR,OAAA,CAACJ,KAAK,CAACa,UAAU;IAAAC,QAAA,eACfV,OAAA,CAACF,GAAG;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CACpB,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}